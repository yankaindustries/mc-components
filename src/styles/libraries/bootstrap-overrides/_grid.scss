.row {
  &--fill {
    height: 100%;
  }
}

.col-auto-max {
  @extend .col-auto;
  max-width: 100%;
}

// Grid modifiers
.gutters {
  &.container,
  &.container-fluid {
    padding: 0 ($grid-gutter-width);
  }

  &.row{
    margin: $grid-gutter-width / -2;

    > .col,
    > [class^="col-"],
    > [class*=" col-"] {
      padding: $grid-gutter-width / 2;
    }
  }

  // Responsive
  @media only screen and (min-width: $mc-bp-sm) {
    &.container,
    &.container-fluid { padding: 0 ($grid-gutter-width-sm * 2); }
  }

  @media only screen and (min-width: $mc-bp-md) {
    &.container,
    &.container-fluid { padding: 0 ($grid-gutter-width-md * 2); }
  }

  @media only screen and (min-width: $mc-bp-lg) {
    &.container,
    &.container-fluid { padding: 0 ($grid-gutter-width-lg * 2); }
  }

  @media only screen and (min-width: $mc-bp-xl) {
    &.container,
    &.container-fluid { padding: 0 ($grid-gutter-width-xl * 2); }
    &.row { margin: $grid-gutter-width-xl / -2; }
  }
}

.gutters-vertical {
  &.row{
    > .col,
    > [class^="col-"],
    > [class*=" col-"] {
      padding: $grid-gutter-width / 2 0;
    }
  }
}

.gutters-horizontal {
  &.row{
    margin: 0 $grid-gutter-width / -2;

    > .col,
    > [class^="col-"],
    > [class*=" col-"] {
      padding-left: $grid-gutter-width / 2;
      padding-right: $grid-gutter-width / 2;
    }
  }
}

.small-gutters {
  &.row {
    margin: $grid-gutter-width-xl / -4;

    > .col,
    [class^="col-"],
    [class*=" col-"] { padding: $grid-gutter-width-xl / 4; }
  }
}

@import '~highlight.js/styles/tomorrow-night';

// This file contains the styles
// and overrides that need to be integrated
// more cleanly.  We don't know where to put them
// yet, so they'll live here!

// THE UPSIDE DOWN
.mc-card {
  padding: $grid-gutter-width-xl / 2;

  &--equal-height {
    height: 100%;
  }

  &__image {
    margin-left: $grid-gutter-width-xl / -2;
    margin-right: $grid-gutter-width-xl / -2;
    width: calc(100% + #{$grid-gutter-width-xl});
  }
}

pre {
  font-family: monospace;
}

a {
  color: inherit;
}

.img--responsive {
  max-width: 100%;
}

.hljs {
  background: $mc-color-gray-100 !important;
  border-radius: 6px;
  color: $mc-color-gray-600 !important;
}

.mc-code {
  display: inline-block;
  padding: 0 0.3em;
  background: $mc-color-gray-100;
  border-radius: 6px;
  font-family: monospace;
  color: $mc-color-gray-600;

  .mc-theme-light,
  .mc-invert & {
    background: $mc-color-gray-600;
    color: $mc-color-gray-300;
  }
}

.example__heading {
  padding-top: var(--mc-scale-8);
  margin-bottom: var(--mc-scale-8);
}

.example__section {
  margin-top: var(--mc-scale-8);
  margin-bottom: var(--mc-scale-10);
}

.example__definition {
  margin-bottom: var(--mc-scale-5);
}

.example__render {
  padding-top: var(--mc-scale-4);
  padding-bottom: var(--mc-scale-4);
  margin-bottom: var(--mc-scale-4);

  .mc-theme-light,
  .mc-invert & {
    border-bottom-color: rgba(0, 0, 0, 0.1)
  }
}

.example__trigger {
  margin-bottom: var(--mc-scale-4);
}

.example__code {
  margin-bottom: var(--mc-scale-4);
}

.example__table {
  width: 100%;
  border-collapse: collapse;
  text-align: left;

  &--fixed {
    table-layout: fixed;
  }

  &--shrink {
    width: 2em;
  }

  tbody {
    tr {
      border-top: 1px solid rgba(255, 255, 255, 0.08);
      border-bottom: 1px solid rgba(255, 255, 255, 0.08);
    }
  }

  th {
    font-weight: 900;
  }

  th, td {
    padding: var(--mc-scale-2);
  }
}

.example-placeholder {
  position: absolute;
  left: 0; top: 0;
  right: 0; bottom: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: -1;

  background: rgba(255, 255, 255, 0.05);
  border: 1px solid rgba(255, 255, 255, 0.08);
}

.example-mc-swatches {
  display: flex;
  flex-wrap: wrap;
}

.example-mc-swatch {
  display: flex;
  align-items: center;

  $colors: (
    mc-color-light: $mc-color-light,
    mc-color-dark: $mc-color-dark,
    mc-color-primary: $mc-color-primary,
    mc-color-primary-hover: $mc-color-primary-hover,
    mc-color-primary-active: $mc-color-primary-active,
    mc-color-secondary: $mc-color-secondary,
    mc-color-secondary-hover: $mc-color-secondary-hover,
    mc-color-secondary-active: $mc-color-secondary-active,
    mc-color-tertiary: $mc-color-tertiary,
    mc-color-tertiary-hover: $mc-color-tertiary-hover,
    mc-color-background: $mc-color-background,
    mc-color-background-invert: $mc-color-background-invert,
    mc-color-text: $mc-color-text,
    mc-color-text-invert: $mc-color-text-invert,
    mc-color-gray-100: $mc-color-gray-100,
    mc-color-gray-200: $mc-color-gray-200,
    mc-color-gray-300: $mc-color-gray-300,
    mc-color-gray-400: $mc-color-gray-400,
    mc-color-gray-500: $mc-color-gray-500,
    mc-color-gray-600: $mc-color-gray-600,
    mc-color-gray-700: $mc-color-gray-700,
    mc-color-gray-800: $mc-color-gray-800,
    mc-color-error: $mc-color-error,
    mc-color-success: $mc-color-success,
    mc-color-highlight: $mc-color-highlight
  );

  @each $colorKey, $colorVal in $colors {
    // .example-mc-swatch--mc-color-primary
    &--#{$colorKey} {
      .example-mc-swatch {
        &__color {
          background-color: #{$colorVal};
        }

        &__hex:before {
          content: '#{$colorVal}';
        }
      }
    }
  }

  &__color {
    display: block;
    width: 35px;
    height: 35px;
    margin-right: 12px;
    border: 1px solid $mc-color-gray-100;
    flex-shrink: 0;

  }
}

.example-mc-step {
  @for $i from 1 through 16 {
    &__box {
      display: inline-block;
      background: $mc-color-primary;
    }

    &__box-#{$i} {
      width: var(--mc-scale-#{$i});
      height: var(--mc-scale-#{$i});
    }

    // divide by 1rem to 'strip' the unit off the function
    // JUST for storybook.
    $rem-sm: calc-step($i, $mc-step-decay-sm) / 1rem;
    $rem-md: calc-step($i, $mc-step-decay-md) / 1rem;
    $rem-lg: calc-step($i, $mc-step-decay-lg) / 1rem;

    &__label-#{$i}-sm-px:before {
      content: "#{$rem-sm * $mc-step-base}";
    }

    &__label-#{$i}-sm-rem:before {
      content: "#{$rem-sm}";
    }

    &__label-#{$i}-sm-em:before {
      content: "#{$rem-sm * $mc-step-base / (4 * $mc-step-scale)}";
    }

    &__label-#{$i}-md-px:before {
      content: "#{$rem-md * $mc-step-base}";
    }

    &__label-#{$i}-md-rem:before {
      content: "#{$rem-md}";
    }

    &__label-#{$i}-md-em:before {
      content: "#{$rem-md * $mc-step-base / (4 * $mc-step-scale)}";
    }

    &__label-#{$i}-lg-px:before {
      content: "#{$rem-lg * $mc-step-base}";
    }

    &__label-#{$i}-lg-rem:before {
      content: "#{$rem-lg}";
    }

    &__label-#{$i}-lg-em:before {
      content: "#{$rem-lg * $mc-step-base / (4 * $mc-step-scale)}";
    }
  }
}

// Inline variables magically, thanks @jones for
// the idea. You're so smart.
 .mc-gutter-value {
  &:before {
    content: "#{$grid-gutter-width}";
  }

  &--xl:before {
    content: "#{$grid-gutter-width-xl}";
  }
 }

.mc-bp-value {
  &--xs:before {
    content: "#{$mc-bp-xs}";
  }

  &--sm:before {
    content: "#{$mc-bp-sm}";
  }

  &--md:before {
    content: "#{$mc-bp-md}";
  }

  &--lg:before {
    content: "#{$mc-bp-lg}";
  }

  &--xl:before {
    content: "#{$mc-bp-xl}";
  }
}


.d-inline-block {
  display: inline-block;
}

.example-offset-left-one-quarter {
  $slide-duration: 650ms;

  left: 0;
  transition: left ($slide-duration / 2) ease;

  &--active {
    left: 22%;
    transition: none;
  }
}

.example-instructor-card-content {
  width: 220px;
}

.example-grid-block {
  position: relative;
  height: 64px;
}

.example__source-link {
  position: fixed;
  right: 0;
  bottom: 0;
  padding: var(--mc-scale-2);
  z-index: 9999;
  display: flex;
  align-items: center;
  justify-content: center;
  background: $mc-color-gray-100;
  color: $mc-color-gray-400;
  line-height: 1;
  border-radius: 6px 0 0 0;
}

.mc-sticky {
  &--container {
    padding-top: 60px;
    padding-bottom: 1000px;
  }
  &--navbar {
    padding: 4px 10px;
    background-color: #fff;
  }
}

.mc-scroll-handler {
  &--navbar {
    opacity: 0;
    visibility: hidden;
    transition: opacity 500ms ease, visibility 0s linear 500ms;

    &--show {
      opacity: 1;
      visibility: visible;
      transition-delay: 0s;
    }
  }
}


// Font includes
/* Sohne - Light */
@font-face {
  font-family: 'Sohne';
  font-style: normal;
  font-weight: 300;
  font-display: swap;
  src: local('Sohne Leicht'), local('Sohne-Leicht'),
    url('//www.masterclass.com/fonts/sohne-leicht.woff2') format('woff2'),
    url('//www.masterclass.com/fonts/sohne-leicht.woff') format('woff');
}

/* Sohne - Regular */
@font-face {
  font-family: 'Sohne';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local('Sohne Buch'), local('Sohne-Buch'),
    url('//www.masterclass.com/fonts/sohne-buch.woff2') format('woff2'),
    url('//www.masterclass.com/fonts/sohne-buch.woff') format('woff');
}

/* Sohne - Bold */
@font-face {
  font-family: 'Sohne';
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: local('Sohne Halbfett'), local('Sohne-Halbfett'),
    url('//www.masterclass.com/fonts/sohne-halbfett.woff2') format('woff2'),
    url('//www.masterclass.com/fonts/sohne-halbfett.woff') format('woff');
}
